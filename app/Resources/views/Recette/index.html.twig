{% extends '::layout_appbundle.html.twig' %}

{% block title %} {{parent()}} - Accueil{% endblock %}

{% block contenu %}

    {{ parent() }}
    {#<div  class="filters row hidden-xs hidden-sm" style="margin-top:15px;" >#}
        {#<div class="col-md-6">#}
            {#<div class="btn-group btn-group-justified" data-toggle="buttons" data-filter-group="famille">#}
                {#{% for famille in familles %}#}
                    {#<label type="button" class="btn btn-default" data-filter=".{{ famille.nom}}">#}
                        {#<span class="hidden-xs {{ famille.icon }}"></span>#}
                        {#<input type="radio" name="options" id="option2" autocomplete="off"> <span class="">{{ famille.nom }}</span>#}
                    {#</label>#}
                {#{% endfor %}#}
            {#</div>#}
        {#</div>#}
        {#<div class="col-md-6">#}
            {#<div class="btn-group btn-group-justified" data-toggle="buttons" data-filter-group="categorie">#}
                {#{% for categorie in categories %}#}
                    {#<label type="button" class="btn btn-default" data-filter=".{{ categorie.nom }}">#}
                        {#<span class="hidden-xs {{ categorie.icon }}"></span>#}
                        {#<input type="radio" name="options" id="option2" autocomplete="off"> {{ categorie.nom }}#}
                    {#</label>#}
                {#{% endfor %}#}
            {#</div>#}
        {#</div>#}
    {#</div>#}
<div class="clearfix"></div>

    <section id="grid" class="row ">
        {% for recette in recettes %}
            <article class="col-xs-12 col-sm-6 col-md-6 col-lg-4 element-item {{ recette.famille.nom }} {{ recette.categorie.nom }}">
                <h4><a href="{{ path('recette_view', {'id': recette.id} ) }}">{{ recette.nom|capitalize }}</a></h4>
                <div class="well">
                    {#<img src="{{('images/' ~ recette.image.url) | imagine_filter('my_thumb')}}" alt="{{recette.image.alt}}" />#}
                    <div>
                        <img style="width:25%; float:left;" src="{% path recette.image, 'small' %}" alt="{{ recette.image.description }}" />

                        <div style="width:75%; float:left;padding-left:5px;">
                            <div>Dur√©e : {{ recette.tempsRealisation|rating(5, 'fa-norm') }}</div>
                            <div>Difficulte : {{ recette.difficulte|rating(5, 'fa-norm') }}</div>
                            <div>Prix : {{ recette.cout|rating(5, 'fa-norm') }}</div>
                        </div>
                        <div class="clearfix"></div>
                    </div>
                    {#{% media recette.image, 'small' %}#}
                    <div>
                    <span class="label label-default">{{ recette.famille.nom }}</span>
                    <span class="label label-default">{{ recette.categorie.nom }}</span>
                    </div>
                </div>

            </article>
        {% else %}
            <p>aucune recettes</p>
        {% endfor %}
    </section>

{% endblock %}


{% block  javaScript%}
    {{ parent() }}
    <script>
        $(function() {
            // init Isotope
            var $grid = $('#grid').isotope({
                itemSelector: '.element-item',
                layoutMode: 'fitRows'
            });

// store filter for each group
            var filters = {};

            $('.filters').on( 'click', '.btn', function(e) {
                var $this = $(this);



                // get group key
                var $buttonGroup = $this.parents('.btn-group');
                var filterGroup = $buttonGroup.attr('data-filter-group');
                // set filter for group
                filters[ filterGroup ] = $this.attr('data-filter');
                if ($this.hasClass('active') == true) {
                    e.stopImmediatePropagation();
                    e.preventDefault();
                    filters[ filterGroup ] = '';
                    $this.removeClass("active").prop('checked', false).blur();
                }
                // combine filters
                var filterValue = concatValues( filters );
                // set filter for Isotope
                $grid.isotope({ filter: filterValue });
            });

// flatten object by concatting values
            function concatValues( obj ) {
                var value = '';
                for ( var prop in obj ) {
                    value += obj[ prop ];
                }

                return value;
            }
        });

    </script>
{% endblock %}
